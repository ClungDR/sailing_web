<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailing.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.sailing.entity.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="available" jdbcType="BIT" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `type`, url, parent_id, parent_ids, permission, available
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_resource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from sys_resource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sailing.entity.Resource" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into sys_resource (id, `name`, `type`, 
      url, parent_id, parent_ids, 
      permission, available)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{parentIds,jdbcType=VARCHAR}, 
      #{permission,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.sailing.entity.Resource">
    insert into sys_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="parentIds != null">
        parent_ids,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentIds != null">
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.sailing.entity.Resource">
    update sys_resource
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentIds != null">
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.sailing.entity.Resource">
    update sys_resource
    set `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>