<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailing.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.sailing.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_ids" jdbcType="VARCHAR" property="roleIds" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
  </resultMap>
  <sql id="Base_Column_List">
    id, organization_id, username, `password`, role_ids, locked, head_pic
  </sql>
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where  username= #{username,jdbcType=VARCHAR}
  </select>

  <delete id="deleteById" parameterType="java.lang.String">
    delete from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sailing.entity.User">
    insert into sys_user (id, organization_id, username, 
      `password`, role_ids, locked, 
      head_pic)
    values (#{id,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roleIds,jdbcType=VARCHAR}, #{locked,jdbcType=BIT}, 
      #{headPic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sailing.entity.User">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="roleIds != null">
        role_ids,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null">
        #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.sailing.entity.User">
    update sys_user
    <set>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleIds != null">
        role_ids = #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateById" parameterType="com.sailing.entity.User">
    update sys_user
    set organization_id = #{organizationId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      role_ids = #{roleIds,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT},
      head_pic = #{headPic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>