<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sailing.dao.NoteMapper">
  <resultMap id="BaseResultMap" type="com.sailing.entity.Note">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="file_type" jdbcType="INTEGER" property="fileType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, create_time, user_id, file_id, file_type
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAllByFile" parameterType="com.sailing.entity.Note" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from note
    where user_id = #{userId,jdbcType=INTEGER} AND file_id = #{fileId,jdbcType=INTEGER} AND file_type=#{fileType,jdbcType=INTEGER}
  </select>
    <select id="selectAllByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from note
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sailing.entity.Note" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into note (id, content, create_time, 
      user_id, file_id, file_type
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=VARCHAR}, #{fileId,jdbcType=INTEGER}, #{fileType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sailing.entity.Note" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.sailing.entity.Note">
    update note
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.sailing.entity.Note">
    update note
    set content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=INTEGER},
      file_type = #{fileType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>